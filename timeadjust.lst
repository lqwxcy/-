C51 COMPILER V9.00   TIMEADJUST                                                            05/31/2013 22:02:18 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE TIMEADJUST
OBJECT MODULE PLACED IN .\output\timeadjust.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE src\timeadjust.c BROWSE DEBUG OBJECTEXTEND PRINT(.\output\timeadjust.lst) O
                    -BJECT(.\output\timeadjust.obj)

line level    source

   1          /*********************************************************** 
   2          文件名称： DS1302时间转换函数
   3          作 者：    梁权威
   4          版 本：    0.01
   5          说 明：    
   6          时间 ：    2012年12月15日20:41:16
   7          修改记录：
   8          总结 ：         
   9          ***********************************************************/
  10          #include"timeadjust.h"
  11          #include"ds1302.h"
  12          
  13          
  14          /*------------------------------------------
  15                  定义操作变量
  16          -------------------------------------------*/
  17          u8 MonthsDay[] = { 0,31,0,31,30,31,30,31,31,30,31,30,31};//一年中每个月的天数，2月份由年分决定
  18          S8 adjust_index = -1;//当前调节时间对象：年月日时分
  19          
  20          /*********************************************************** 
  21          函数名称：       u8 isLeapYear( u16 year )
  22          函数功能：       判断是否为闰年，如果这一年能够被4整除且不能被100整除或能够被400整除说明这一年是闰年               
  23          入口参数：       year 
  24          出口参数：        
  25          备 注：          1: 注意年是要大于255，所以要数据类型是int类
  26          ***********************************************************/
  27          u8 isLeapYear( u16 year )
  28          {
  29   1              return ( year % 4 == 0 && year %100 != 0 || year %400 == 0 );
  30   1      }
  31          
  32          /*********************************************************** 
  33          函数名称：       void RefreshWeekDay()
  34          函数功能：       刷新星期函数              
  35          入口参数：       无 
  36          出口参数：        
  37          备 注： 
  38          ***********************************************************/
  39          void RefreshWeekDay( void )
  40          {
  41   1              u16 i,week = 5, year; //已知1999.12.31是星期五
  42   1              for( i = 2000; i < 2000 + DataTime[ 6 ]; i++ )
  43   1              {
  44   2                      year =  isLeapYear( i ) ?  366 : 365; //判断是否为闰年，如果是闰年是366天，不是则365天
  45   2                      week = ( week + year ) % 7;       //如果是2000年1月1号则是星期六，370 % 7 = 6
  46   2              }
  47   1              year = 0;       
  48   1              for( i = 1; i < DataTime[ i ]; i ++ )
  49   1              {
  50   2                      year = year + MonthsDay[ DataTime[ 4 ] ];       
  51   2              }
  52   1              year = year + DataTime[ 3 ];
  53   1              DataTime[ 5 ] = ( week + year ) % 7;            
  54   1      }
C51 COMPILER V9.00   TIMEADJUST                                                            05/31/2013 22:02:18 PAGE 2   

  55          
  56          /*********************************************************** 
  57          函数名称：       void DataTime_Adjust( S8 x )
  58          函数功能：       调整时间：年月日时分              
  59          入口参数：       x 
  60          出口参数：        
  61          备 注：         1:有正负数据类型是有符号类型
  62          ***********************************************************/
  63          void DataTime_Adjust( S8 x )
  64          {
  65   1              switch( adjust_index )
  66   1              {
  67   2                      case 6:  //调整年00-99
  68   2                                      if( x == 1 && DataTime[ 6 ] < 99 )
  69   2                                              DataTime[ 6 ]++;
  70   2                                      if( x == -1 && DataTime[ 6 ] > 0 )
  71   2                                              DataTime[ 6 ]--;
  72   2      
  73   2                                      MonthsDay[ 2 ] = isLeapYear( 2000 + DataTime[ 6 ] ) ?  29 : 28;  //闰年二月份有29天
  74   2                                      if( DataTime[ 3 ] > MonthsDay[ DataTime[ 4 ] ])
  75   2                                              DataTime[ 3 ] = MonthsDay[ DataTime[ 4 ] ];//调整年的时候，月是不变的，但如果那一年（比如2012）则好是
             -闰年二29天，但
  76   2                                                                                                                                      //调整年后是2013却不闰年，二月只有28天 ，那2013年二要就跳到28号
  77   2                                      RefreshWeekDay( );      //调用星期函数
  78   2                                      break;
  79   2                      case 4: //调整月0-12
  80   2                                      if( x == 1 && DataTime[ 4 ] < 12 )
  81   2                                              DataTime[ 4 ]++;
  82   2                                      if( x == -1 && DataTime[ 4 ] > 1 )
  83   2                                              DataTime[ 4 ]--;
  84   2      
  85   2                                      MonthsDay[ 2 ] = isLeapYear( 2000 + DataTime[ 6 ] ) ?  29 : 28;  //闰年二月份有29天
  86   2                                      if( DataTime[ 3 ] > MonthsDay[ DataTime[ 4 ] ])
  87   2                                              DataTime[ 3 ] = MonthsDay[ DataTime[ 4 ] ];//调整年的时候，月是不变的，但如果那一年（比如2012）则好是
             -闰年二29天，但
  88   2                                                                                                                                      //调整年后是2013却不闰年，二月只有28天 ，那2013年二要就跳到28号
  89   2                                      RefreshWeekDay( );      //调用星期函数
  90   2                                      break;
  91   2                      case 3: // 调整日28，29，30，31天
  92   2      
  93   2                                      MonthsDay[ 2 ] = isLeapYear( 2000 + DataTime[ 6 ] ) ?  29 : 28;  //闰年二月份有29天
  94   2                                      if( x == 1 && DataTime[ 3 ] < MonthsDay[ DataTime[ 4 ] ] )
  95   2                                              DataTime[ 3 ]++;
  96   2                                      if( x == -1 && DataTime[ 3 ] > 0 )
  97   2                                              DataTime[ 3 ]--;
  98   2      
  99   2                                      RefreshWeekDay( );      //调用星期函数
 100   2                                      break;
 101   2                      case 2://调整时0-23
 102   2                                      if( x == 1 && DataTime[ 2 ] < 23 )
 103   2                                              DataTime[ 2 ]++;
 104   2                                      if( x == -1 && DataTime[ 2 ] > 0 )
 105   2                                              DataTime[ 2 ]--;
 106   2                                      break;
 107   2                  case 1://调整分0-59
 108   2                                      if( x == 1 && DataTime[ 1 ] < 59 )
 109   2                                              DataTime[ 1 ]++;
 110   2                                      if( x == -1 && DataTime[ 1 ] > 0 )
 111   2                                              DataTime[ 1 ]--;
 112   2                                      break;                          
 113   2              }       
 114   1      }
C51 COMPILER V9.00   TIMEADJUST                                                            05/31/2013 22:02:18 PAGE 3   

 115          
 116          
 117          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    437    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     14       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
